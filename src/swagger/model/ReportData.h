/**
* Lab generator API.
* Can be used to generate laboratory works reports for BMSTU IU9. 
*
* OpenAPI spec version: 0.0.1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * ReportData.h
 *
 * 
 */

#ifndef ReportData_H_
#define ReportData_H_


#include "ModelBase.h"

#include <string>

namespace io {
namespace swagger {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ReportData
    : public ModelBase
{
public:
    ReportData();
    virtual ~ReportData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ReportData members

    /// <summary>
    /// 
    /// </summary>
    std::string getWorkType() const;
    void setWorkType(std::string value);
        /// <summary>
    /// 
    /// </summary>
    std::string getTitle() const;
    void setTitle(std::string value);
        /// <summary>
    /// 
    /// </summary>
    std::string getAuthor() const;
    void setAuthor(std::string value);
        /// <summary>
    /// 
    /// </summary>
    std::string getTeacher() const;
    void setTeacher(std::string value);
        /// <summary>
    /// 
    /// </summary>
    std::string getGroup() const;
    void setGroup(std::string value);
        /// <summary>
    /// 
    /// </summary>
    int32_t getCourse() const;
    void setCourse(int32_t value);
        /// <summary>
    /// 
    /// </summary>
    std::string getLabNumber() const;
    void setLabNumber(std::string value);
        /// <summary>
    /// 
    /// </summary>
    std::string getBody() const;
    void setBody(std::string value);
        /// <summary>
    /// 
    /// </summary>
    int32_t getYear() const;
    void setYear(int32_t value);
    
protected:
    std::string m_WorkType;

    std::string m_Title;

    std::string m_Author;

    std::string m_Teacher;

    std::string m_Group;

    int32_t m_Course;

    std::string m_LabNumber;

    std::string m_Body;

    int32_t m_Year;

};

}
}
}
}

#endif /* ReportData_H_ */
