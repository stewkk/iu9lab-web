/**
* Lab generator API.
* Can be used to generate laboratory works reports for BMSTU IU9. 
*
* OpenAPI spec version: 0.0.1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "ReportData.h"

namespace io {
namespace swagger {
namespace server {
namespace model {

ReportData::ReportData()
{
    m_WorkType = "";
    m_Title = "";
    m_Author = "";
    m_Teacher = "";
    m_Group = "";
    m_Course = 0;
    m_LabNumber = "";
    m_Body = "";
    m_Year = 0;
    
}

ReportData::~ReportData()
{
}

void ReportData::validate()
{
    // TODO: implement validation
}

nlohmann::json ReportData::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["workType"] = ModelBase::toJson(m_WorkType);
    val["title"] = ModelBase::toJson(m_Title);
    val["author"] = ModelBase::toJson(m_Author);
    val["teacher"] = ModelBase::toJson(m_Teacher);
    val["group"] = ModelBase::toJson(m_Group);
    val["course"] = m_Course;
    val["labNumber"] = ModelBase::toJson(m_LabNumber);
    val["body"] = ModelBase::toJson(m_Body);
    val["year"] = m_Year;
    

    return val;
}

void ReportData::fromJson(nlohmann::json& val)
{
    setWorkType(val.at("workType"));
    setTitle(val.at("title"));
    setAuthor(val.at("author"));
    setTeacher(val.at("teacher"));
    setGroup(val.at("group"));
    setCourse(val.at("course"));
    setLabNumber(val.at("labNumber"));
    setBody(val.at("body"));
    setYear(val.at("year"));
    
}


std::string ReportData::getWorkType() const
{
    return m_WorkType;
}
void ReportData::setWorkType(std::string value)
{
    m_WorkType = value;
    
}
std::string ReportData::getTitle() const
{
    return m_Title;
}
void ReportData::setTitle(std::string value)
{
    m_Title = value;
    
}
std::string ReportData::getAuthor() const
{
    return m_Author;
}
void ReportData::setAuthor(std::string value)
{
    m_Author = value;
    
}
std::string ReportData::getTeacher() const
{
    return m_Teacher;
}
void ReportData::setTeacher(std::string value)
{
    m_Teacher = value;
    
}
std::string ReportData::getGroup() const
{
    return m_Group;
}
void ReportData::setGroup(std::string value)
{
    m_Group = value;
    
}
int32_t ReportData::getCourse() const
{
    return m_Course;
}
void ReportData::setCourse(int32_t value)
{
    m_Course = value;
    
}
std::string ReportData::getLabNumber() const
{
    return m_LabNumber;
}
void ReportData::setLabNumber(std::string value)
{
    m_LabNumber = value;
    
}
std::string ReportData::getBody() const
{
    return m_Body;
}
void ReportData::setBody(std::string value)
{
    m_Body = value;
    
}
int32_t ReportData::getYear() const
{
    return m_Year;
}
void ReportData::setYear(int32_t value)
{
    m_Year = value;
    
}

}
}
}
}

